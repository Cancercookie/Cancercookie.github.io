function getRenderer() {
  return {
    name: "@astrojs/preact",
    clientEntrypoint: "@astrojs/preact/client.js",
    serverEntrypoint: "@astrojs/preact/server.js",
    jsxImportSource: "preact",
    jsxTransformOptions: async () => {
      const {
        default: { default: jsx }
      } = await import("@babel/plugin-transform-react-jsx");
      return {
        plugins: [jsx({}, { runtime: "automatic", importSource: "preact" })]
      };
    }
  };
}
function getViteConfiguration() {
  return {
    optimizeDeps: {
      include: [
        "@astrojs/preact/client.js",
        "preact",
        "preact/jsx-runtime",
        "preact-render-to-string"
      ],
      exclude: ["@astrojs/preact/server.js"]
    },
    ssr: {
      external: ["preact-render-to-string"]
    }
  };
}
function src_default() {
  return {
    name: "@astrojs/preact",
    hooks: {
      "astro:config:setup": ({ addRenderer }) => {
        addRenderer(getRenderer());
        return {
          vite: getViteConfiguration()
        };
      }
    }
  };
}
export {
  src_default as default
};
